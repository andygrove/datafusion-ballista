select
    o_year,
    sum(case
            when nation = 'BRAZIL' then volume
            else 0
        end) / sum(volume) as mkt_share
from
    (
        select
            extract(year from o_orderdate) as o_year,
            l_extendedprice * (1 - l_discount) as volume,
            n2.n_name as nation
        from
            part,
            supplier,
            lineitem,
            orders,
            customer,
            nation n1,
            nation n2,
            region
        where
                p_partkey = l_partkey
          and s_suppkey = l_suppkey
          and l_orderkey = o_orderkey
          and o_custkey = c_custkey
          and c_nationkey = n1.n_nationkey
          and n1.n_regionkey = r_regionkey
          and r_name = 'AMERICA'
          and s_nationkey = n2.n_nationkey
          and o_orderdate between date '1995-01-01' and date '1996-12-31'
          and p_type = 'ECONOMY ANODIZED STEEL'
    ) as all_nations
group by
    o_year
order by
    o_year;


Query Stage 0:
ShuffleWriterExec: Some(Hash([Column { name: "r_regionkey", index: 0 }], 8))
  ProjectionExec: expr=[r_regionkey@0 as r_regionkey]
    CoalesceBatchesExec: target_batch_size=8192
      FilterExec: r_name@1 = AMERICA
        ParquetExec: file_groups={1 group: [[mnt/bigdata/tpch/sf100/region.parquet/part1.parquet]]}, projection=[r_regionkey, r_name], predicate=r_name@1 = AMERICA, pruning_predicate=CASE WHEN r_name_null_count@2 = r_name_row_count@3 THEN false ELSE r_name_min@0 <= AMERICA AND AMERICA <= r_name_max@1 END, required_guarantees=[r_name in (AMERICA)]

Query Stage 1:
ShuffleWriterExec: Some(Hash([Column { name: "n_nationkey", index: 0 }], 8))
  ParquetExec: file_groups={1 group: [[mnt/bigdata/tpch/sf100/nation.parquet/part1.parquet]]}, projection=[n_nationkey, n_name]

Query Stage 2:
ShuffleWriterExec: Some(Hash([Column { name: "n_nationkey", index: 0 }], 8))
  ParquetExec: file_groups={1 group: [[mnt/bigdata/tpch/sf100/nation.parquet/part1.parquet]]}, projection=[n_nationkey, n_regionkey]

Query Stage 3:
ShuffleWriterExec: Some(Hash([Column { name: "c_custkey", index: 0 }], 8))
  ParquetExec: file_groups={8 groups: [[mnt/bigdata/tpch/sf100/customer.parquet/part1.parquet:0..78209135, mnt/bigdata/tpch/sf100/customer.parquet/part10.parquet:0..78199486], [mnt/bigdata/tpch/sf100/customer.parquet/part10.parquet:78199486..78230419, mnt/bigdata/tpch/sf100/customer.parquet/part11.parquet:0..78213009, mnt/bigdata/tpch/sf100/customer.parquet/part12.parquet:0..78164679], [mnt/bigdata/tpch/sf100/customer.parquet/part12.parquet:78164679..78184439, mnt/bigdata/tpch/sf100/customer.parquet/part13.parquet:0..78214803, mnt/bigdata/tpch/sf100/customer.parquet/part14.parquet:0..78174058], [mnt/bigdata/tpch/sf100/customer.parquet/part14.parquet:78174058..78203896, mnt/bigdata/tpch/sf100/customer.parquet/part15.parquet:0..78207662, mnt/bigdata/tpch/sf100/customer.parquet/part16.parquet:0..78171121], [mnt/bigdata/tpch/sf100/customer.parquet/part16.parquet:78171121..78199415, mnt/bigdata/tpch/sf100/customer.parquet/part2.parquet:0..78172558, mnt/bigdata/tpch/sf100/customer.parquet/part3.parquet:0..78198064, mnt/bigdata/tpch/sf100/customer.parquet/part4.parquet:0..9705], [mnt/bigdata/tpch/sf100/customer.parquet/part4.parquet:9705..78221511, mnt/bigdata/tpch/sf100/customer.parquet/part5.parquet:0..78196815], [mnt/bigdata/tpch/sf100/customer.parquet/part5.parquet:78196815..78206183, mnt/bigdata/tpch/sf100/customer.parquet/part6.parquet:0..78200661, mnt/bigdata/tpch/sf100/customer.parquet/part7.parquet:0..78198592], [mnt/bigdata/tpch/sf100/customer.parquet/part7.parquet:78198592..78215057, mnt/bigdata/tpch/sf100/customer.parquet/part8.parquet:0..78193102, mnt/bigdata/tpch/sf100/customer.parquet/part9.parquet:0..78199052]]}, projection=[c_custkey, c_nationkey]

Query Stage 4:
ShuffleWriterExec: Some(Hash([Column { name: "o_orderkey", index: 0 }], 8))
  CoalesceBatchesExec: target_batch_size=8192
    FilterExec: o_orderdate@2 >= 1995-01-01 AND o_orderdate@2 <= 1996-12-31
      ParquetExec: file_groups={8 groups: [[mnt/bigdata/tpch/sf100/orders.parquet/part1.parquet:0..414015218, mnt/bigdata/tpch/sf100/orders.parquet/part10.parquet:0..414048620, mnt/bigdata/tpch/sf100/orders.parquet/part11.parquet:0..38879], [mnt/bigdata/tpch/sf100/orders.parquet/part11.parquet:38879..414036634, mnt/bigdata/tpch/sf100/orders.parquet/part12.parquet:0..414048473, mnt/bigdata/tpch/sf100/orders.parquet/part13.parquet:0..56489], [mnt/bigdata/tpch/sf100/orders.parquet/part13.parquet:56489..414046189, mnt/bigdata/tpch/sf100/orders.parquet/part14.parquet:0..414061303, mnt/bigdata/tpch/sf100/orders.parquet/part15.parquet:0..51714], [mnt/bigdata/tpch/sf100/orders.parquet/part15.parquet:51714..414057732, mnt/bigdata/tpch/sf100/orders.parquet/part16.parquet:0..414039840, mnt/bigdata/tpch/sf100/orders.parquet/part2.parquet:0..56859], [mnt/bigdata/tpch/sf100/orders.parquet/part2.parquet:56859..414037014, mnt/bigdata/tpch/sf100/orders.parquet/part3.parquet:0..414067201, mnt/bigdata/tpch/sf100/orders.parquet/part4.parquet:0..55361], [mnt/bigdata/tpch/sf100/orders.parquet/part4.parquet:55361..414066732, mnt/bigdata/tpch/sf100/orders.parquet/part5.parquet:0..414028297, mnt/bigdata/tpch/sf100/orders.parquet/part6.parquet:0..63049], [mnt/bigdata/tpch/sf100/orders.parquet/part6.parquet:63049..414092946, mnt/bigdata/tpch/sf100/orders.parquet/part7.parquet:0..414072820], [mnt/bigdata/tpch/sf100/orders.parquet/part7.parquet:414072820..414077818, mnt/bigdata/tpch/sf100/orders.parquet/part8.parquet:0..414070661, mnt/bigdata/tpch/sf100/orders.parquet/part9.parquet:0..414027051]]}, projection=[o_orderkey, o_custkey, o_orderdate], predicate=o_orderdate@4 >= 1995-01-01 AND o_orderdate@4 <= 1996-12-31, pruning_predicate=CASE WHEN o_orderdate_null_count@1 = o_orderdate_row_count@2 THEN false ELSE o_orderdate_max@0 >= 1995-01-01 END AND CASE WHEN o_orderdate_null_count@1 = o_orderdate_row_count@2 THEN false ELSE o_orderdate_min@3 <= 1996-12-31 END, required_guarantees=[]

Query Stage 5:
ShuffleWriterExec: Some(Hash([Column { name: "s_suppkey", index: 0 }], 8))
  ParquetExec: file_groups={8 groups: [[mnt/bigdata/tpch/sf100/supplier.parquet/part1.parquet:0..5503838, mnt/bigdata/tpch/sf100/supplier.parquet/part10.parquet:0..5497270, mnt/bigdata/tpch/sf100/supplier.parquet/part11.parquet:0..1793], [mnt/bigdata/tpch/sf100/supplier.parquet/part11.parquet:1793..5508630, mnt/bigdata/tpch/sf100/supplier.parquet/part12.parquet:0..5496064], [mnt/bigdata/tpch/sf100/supplier.parquet/part12.parquet:5496064..5498685, mnt/bigdata/tpch/sf100/supplier.parquet/part13.parquet:0..5504379, mnt/bigdata/tpch/sf100/supplier.parquet/part14.parquet:0..5495901], [mnt/bigdata/tpch/sf100/supplier.parquet/part14.parquet:5495901..5502882, mnt/bigdata/tpch/sf100/supplier.parquet/part15.parquet:0..5499373, mnt/bigdata/tpch/sf100/supplier.parquet/part16.parquet:0..5496547], [mnt/bigdata/tpch/sf100/supplier.parquet/part16.parquet:5496547..5503828, mnt/bigdata/tpch/sf100/supplier.parquet/part2.parquet:0..5498113, mnt/bigdata/tpch/sf100/supplier.parquet/part3.parquet:0..5496774, mnt/bigdata/tpch/sf100/supplier.parquet/part4.parquet:0..733], [mnt/bigdata/tpch/sf100/supplier.parquet/part4.parquet:733..5495657, mnt/bigdata/tpch/sf100/supplier.parquet/part5.parquet:0..5502994, mnt/bigdata/tpch/sf100/supplier.parquet/part6.parquet:0..4983], [mnt/bigdata/tpch/sf100/supplier.parquet/part6.parquet:4983..5503668, mnt/bigdata/tpch/sf100/supplier.parquet/part7.parquet:0..5504216], [mnt/bigdata/tpch/sf100/supplier.parquet/part7.parquet:5504216..5508016, mnt/bigdata/tpch/sf100/supplier.parquet/part8.parquet:0..5498618, mnt/bigdata/tpch/sf100/supplier.parquet/part9.parquet:0..5500477]]}, projection=[s_suppkey, s_nationkey]

Query Stage 6:
ShuffleWriterExec: Some(Hash([Column { name: "p_partkey", index: 0 }], 8))
  ProjectionExec: expr=[p_partkey@0 as p_partkey]
    CoalesceBatchesExec: target_batch_size=8192
      FilterExec: p_type@1 = ECONOMY ANODIZED STEEL
        ParquetExec: file_groups={8 groups: [[mnt/bigdata/tpch/sf100/part.parquet/part1.parquet:0..40049979, mnt/bigdata/tpch/sf100/part.parquet/part10.parquet:0..40061159, mnt/bigdata/tpch/sf100/part.parquet/part11.parquet:0..8190], [mnt/bigdata/tpch/sf100/part.parquet/part11.parquet:8190..40056642, mnt/bigdata/tpch/sf100/part.parquet/part12.parquet:0..40065338, mnt/bigdata/tpch/sf100/part.parquet/part13.parquet:0..5538], [mnt/bigdata/tpch/sf100/part.parquet/part13.parquet:5538..40056587, mnt/bigdata/tpch/sf100/part.parquet/part14.parquet:0..40068279], [mnt/bigdata/tpch/sf100/part.parquet/part14.parquet:40068279..40070033, mnt/bigdata/tpch/sf100/part.parquet/part15.parquet:0..40064342, mnt/bigdata/tpch/sf100/part.parquet/part16.parquet:0..40053232], [mnt/bigdata/tpch/sf100/part.parquet/part16.parquet:40053232..40065675, mnt/bigdata/tpch/sf100/part.parquet/part2.parquet:0..40061056, mnt/bigdata/tpch/sf100/part.parquet/part3.parquet:0..40045829], [mnt/bigdata/tpch/sf100/part.parquet/part3.parquet:40045829..40059089, mnt/bigdata/tpch/sf100/part.parquet/part4.parquet:0..40058789, mnt/bigdata/tpch/sf100/part.parquet/part5.parquet:0..40047279], [mnt/bigdata/tpch/sf100/part.parquet/part5.parquet:40047279..40055014, mnt/bigdata/tpch/sf100/part.parquet/part6.parquet:0..40060917, mnt/bigdata/tpch/sf100/part.parquet/part7.parquet:0..40050676], [mnt/bigdata/tpch/sf100/part.parquet/part7.parquet:40050676..40051593, mnt/bigdata/tpch/sf100/part.parquet/part8.parquet:0..40055632, mnt/bigdata/tpch/sf100/part.parquet/part9.parquet:0..40062778]]}, projection=[p_partkey, p_type], predicate=p_type@4 = ECONOMY ANODIZED STEEL, pruning_predicate=CASE WHEN p_type_null_count@2 = p_type_row_count@3 THEN false ELSE p_type_min@0 <= ECONOMY ANODIZED STEEL AND ECONOMY ANODIZED STEEL <= p_type_max@1 END, required_guarantees=[p_type in (ECONOMY ANODIZED STEEL)]

Query Stage 7:
ShuffleWriterExec: Some(Hash([Column { name: "l_partkey", index: 1 }], 8))
  ParquetExec: file_groups={8 groups: [[mnt/bigdata/tpch/sf100/lineitem.parquet/part1.parquet:0..1469550136, mnt/bigdata/tpch/sf100/lineitem.parquet/part10.parquet:0..1469810475], [mnt/bigdata/tpch/sf100/lineitem.parquet/part10.parquet:1469810475..1469811062, mnt/bigdata/tpch/sf100/lineitem.parquet/part11.parquet:0..1469792487, mnt/bigdata/tpch/sf100/lineitem.parquet/part12.parquet:0..1469567537], [mnt/bigdata/tpch/sf100/lineitem.parquet/part12.parquet:1469567537..1469576762, mnt/bigdata/tpch/sf100/lineitem.parquet/part13.parquet:0..1469839488, mnt/bigdata/tpch/sf100/lineitem.parquet/part14.parquet:0..1469511898], [mnt/bigdata/tpch/sf100/lineitem.parquet/part14.parquet:1469511898..1469647240, mnt/bigdata/tpch/sf100/lineitem.parquet/part15.parquet:0..1469833433, mnt/bigdata/tpch/sf100/lineitem.parquet/part16.parquet:0..1469391836], [mnt/bigdata/tpch/sf100/lineitem.parquet/part16.parquet:1469391836..1469765133, mnt/bigdata/tpch/sf100/lineitem.parquet/part2.parquet:0..1469212062, mnt/bigdata/tpch/sf100/lineitem.parquet/part3.parquet:0..1469775252], [mnt/bigdata/tpch/sf100/lineitem.parquet/part3.parquet:1469775252..1469794280, mnt/bigdata/tpch/sf100/lineitem.parquet/part4.parquet:0..1469768080, mnt/bigdata/tpch/sf100/lineitem.parquet/part5.parquet:0..1469573503], [mnt/bigdata/tpch/sf100/lineitem.parquet/part5.parquet:1469573503..1469812961, mnt/bigdata/tpch/sf100/lineitem.parquet/part6.parquet:0..1469938331, mnt/bigdata/tpch/sf100/lineitem.parquet/part7.parquet:0..1469182822], [mnt/bigdata/tpch/sf100/lineitem.parquet/part7.parquet:1469182822..1469651669, mnt/bigdata/tpch/sf100/lineitem.parquet/part8.parquet:0..1469328494, mnt/bigdata/tpch/sf100/lineitem.parquet/part9.parquet:0..1469563265]]}, projection=[l_orderkey, l_partkey, l_suppkey, l_extendedprice, l_discount]

Query Stage 8:
ShuffleWriterExec: Some(Hash([Column { name: "l_suppkey", index: 1 }], 8))
  CoalesceBatchesExec: target_batch_size=8192
    HashJoinExec: mode=Partitioned, join_type=Inner, on=[(p_partkey@0, l_partkey@1)], projection=[l_orderkey@1, l_suppkey@3, l_extendedprice@4, l_discount@5]
      CoalesceBatchesExec: target_batch_size=8192
        UnresolvedShuffleExec
      CoalesceBatchesExec: target_batch_size=8192
        UnresolvedShuffleExec

Query Stage 9:
ShuffleWriterExec: Some(Hash([Column { name: "l_orderkey", index: 0 }], 8))
  ProjectionExec: expr=[l_orderkey@1 as l_orderkey, l_extendedprice@2 as l_extendedprice, l_discount@3 as l_discount, s_nationkey@0 as s_nationkey]
    CoalesceBatchesExec: target_batch_size=8192
      HashJoinExec: mode=Partitioned, join_type=Inner, on=[(s_suppkey@0, l_suppkey@1)], projection=[s_nationkey@1, l_orderkey@2, l_extendedprice@4, l_discount@5]
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec

Query Stage 10:
ShuffleWriterExec: Some(Hash([Column { name: "o_custkey", index: 3 }], 8))
  ProjectionExec: expr=[l_extendedprice@2 as l_extendedprice, l_discount@3 as l_discount, s_nationkey@4 as s_nationkey, o_custkey@0 as o_custkey, o_orderdate@1 as o_orderdate]
    CoalesceBatchesExec: target_batch_size=8192
      HashJoinExec: mode=Partitioned, join_type=Inner, on=[(o_orderkey@0, l_orderkey@0)], projection=[o_custkey@1, o_orderdate@2, l_extendedprice@4, l_discount@5, s_nationkey@6]
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec

Query Stage 11:
ShuffleWriterExec: Some(Hash([Column { name: "c_nationkey", index: 4 }], 8))
  ProjectionExec: expr=[l_extendedprice@1 as l_extendedprice, l_discount@2 as l_discount, s_nationkey@3 as s_nationkey, o_orderdate@4 as o_orderdate, c_nationkey@0 as c_nationkey]
    CoalesceBatchesExec: target_batch_size=8192
      HashJoinExec: mode=Partitioned, join_type=Inner, on=[(c_custkey@0, o_custkey@3)], projection=[c_nationkey@1, l_extendedprice@2, l_discount@3, s_nationkey@4, o_orderdate@6]
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec

Query Stage 12:
ShuffleWriterExec: Some(Hash([Column { name: "s_nationkey", index: 2 }], 8))
  ProjectionExec: expr=[l_extendedprice@1 as l_extendedprice, l_discount@2 as l_discount, s_nationkey@3 as s_nationkey, o_orderdate@4 as o_orderdate, n_regionkey@0 as n_regionkey]
    CoalesceBatchesExec: target_batch_size=8192
      HashJoinExec: mode=Partitioned, join_type=Inner, on=[(n_nationkey@0, c_nationkey@4)], projection=[n_regionkey@1, l_extendedprice@2, l_discount@3, s_nationkey@4, o_orderdate@5]
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec

Query Stage 13:
ShuffleWriterExec: Some(Hash([Column { name: "n_regionkey", index: 3 }], 8))
  ProjectionExec: expr=[l_extendedprice@1 as l_extendedprice, l_discount@2 as l_discount, o_orderdate@3 as o_orderdate, n_regionkey@4 as n_regionkey, n_name@0 as n_name]
    CoalesceBatchesExec: target_batch_size=8192
      HashJoinExec: mode=Partitioned, join_type=Inner, on=[(n_nationkey@0, s_nationkey@2)], projection=[n_name@1, l_extendedprice@2, l_discount@3, o_orderdate@5, n_regionkey@6]
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec

Query Stage 14:
ShuffleWriterExec: Some(Hash([Column { name: "o_year", index: 0 }], 8))
  AggregateExec: mode=Partial, gby=[o_year@0 as o_year], aggr=[SUM(CASE WHEN all_nations.nation = Utf8("BRAZIL") THEN all_nations.volume ELSE Int64(0) END), SUM(all_nations.volume)]
    ProjectionExec: expr=[date_part(YEAR, o_orderdate@2) as o_year, l_extendedprice@0 * (Some(1),20,0 - l_discount@1) as volume, n_name@3 as nation]
      CoalesceBatchesExec: target_batch_size=8192
        HashJoinExec: mode=Partitioned, join_type=Inner, on=[(r_regionkey@0, n_regionkey@3)], projection=[l_extendedprice@1, l_discount@2, o_orderdate@3, n_name@5]
          CoalesceBatchesExec: target_batch_size=8192
            UnresolvedShuffleExec
          CoalesceBatchesExec: target_batch_size=8192
            UnresolvedShuffleExec

Query Stage 15:
ShuffleWriterExec: None
  SortExec: expr=[o_year@0 ASC NULLS LAST], preserve_partitioning=[true]
    ProjectionExec: expr=[o_year@0 as o_year, SUM(CASE WHEN all_nations.nation = Utf8("BRAZIL") THEN all_nations.volume ELSE Int64(0) END)@1 / SUM(all_nations.volume)@2 as mkt_share]
      AggregateExec: mode=FinalPartitioned, gby=[o_year@0 as o_year], aggr=[SUM(CASE WHEN all_nations.nation = Utf8("BRAZIL") THEN all_nations.volume ELSE Int64(0) END), SUM(all_nations.volume)]
        CoalesceBatchesExec: target_batch_size=8192
          UnresolvedShuffleExec

Query Stage 16:
ShuffleWriterExec: None
  SortPreservingMergeExec: [o_year@0 ASC NULLS LAST]
    UnresolvedShuffleExec

